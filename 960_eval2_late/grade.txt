Grading at 11/10/2022:21:50:39.776532
For commit ID 50559dc47fec446fde61c8b73798e16b817c3cd2
Grading at Thu Nov 10 04:50:32 PM EST 2022
Doing some basic checking for your submission

Step 1
Checking that story-step1 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
rm story-step1.o
The code compiled (good)
Executable story-step1 exists (good)
Checking with provided test case story.txt
Your file matched the expected output
Now running YOUR tests for step 1

1.1: Current test is story-step1 story.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean

1.2: Current test is story-step1 exstory.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean

1.3: Current test is story-step1 exstory2.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean

1.4: Current test is story-step1 story2.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean

Step 2
Checking that story-step2 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step2.c
gcc -o story-step2 story-step2.o rand_story.o provided.o
rm story-step2.o
The code compiled (good)
Executable story-step2 exists (good)
Now running YOUR tests for step 2

2.1: Current test is story-step2 words.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean

Step 3
Checking that story-step3 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
The code compiled (good)
Executable story-step3 exists (good)
Now running YOUR tests for step 3

3.1: Current test is story-step3 words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean

3.2: Current test is story-step3 words2.txt story3.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean

Step 4
Checking that story-step4 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step4.c
gcc -o story-step4 story-step4.o rand_story.o provided.o
rm story-step4.o
The code compiled (good)
Executable story-step4 exists (good)
Now running YOUR tests for step 4

4.1: Current test is story-step4 words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind was clean (no errors, no memory leaks)
Valgrind was clean

4.2: Current test is story-step4 -n words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind reported errors
Valgrind reported errors or memory leaks:
==2919597== Memcheck, a memory error detector
==2919597== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2919597== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2919597== Command: ./story-step4 -n words.txt story2.txt
==2919597== Parent PID: 2919596
==2919597== 
==2919597== Invalid free() / delete / delete[] / realloc()
==2919597==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2919597==    by 0x10AC63: freeSavedRes (rand_story.c:453)
==2919597==    by 0x10B12A: cd_underscorefor4 (rand_story.c:585)
==2919597==    by 0x1095D1: main (story-step4.c:47)
==2919597==  Address 0x4a8fc80 is 0 bytes inside a block of size 9 free'd
==2919597==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2919597==    by 0x109D8C: cd_underscore (rand_story.c:174)
==2919597==    by 0x10B033: cd_underscorefor4 (rand_story.c:566)
==2919597==    by 0x1095D1: main (story-step4.c:47)
==2919597==  Block was alloc'd at
==2919597==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2919597==    by 0x10A98C: storeNewArr (rand_story.c:408)
==2919597==    by 0x10ABC4: storeRes (rand_story.c:443)
==2919597==    by 0x10AEB8: savedCatfor4 (rand_story.c:522)
==2919597==    by 0x1095A3: main (story-step4.c:43)
==2919597== 
==2919597== 
==2919597== HEAP SUMMARY:
==2919597==     in use at exit: 9 bytes in 1 blocks
==2919597==   total heap usage: 159 allocs, 159 frees, 16,464 bytes allocated
==2919597== 
==2919597== 9 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2919597==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2919597==    by 0x10AB2A: storeRes (rand_story.c:429)
==2919597==    by 0x10AEB8: savedCatfor4 (rand_story.c:522)
==2919597==    by 0x1095A3: main (story-step4.c:43)
==2919597== 
==2919597== LEAK SUMMARY:
==2919597==    definitely lost: 9 bytes in 1 blocks
==2919597==    indirectly lost: 0 bytes in 0 blocks
==2919597==      possibly lost: 0 bytes in 0 blocks
==2919597==    still reachable: 0 bytes in 0 blocks
==2919597==         suppressed: 0 bytes in 0 blocks
==2919597== 
==2919597== For lists of detected and suppressed errors, rerun with: -s
==2919597== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

You have NOT passed your test cases!
You should go and figure out/understand where thing went wrong
And fix the problem(s) before the deadline

Overall Grade: NO GRADE YET
